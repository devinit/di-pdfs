// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gql Types to Typescript types End to End test: should create typescript types from graphql files 1`] = `
"\\"// tslint:disable
// graphql typescript definitions

declare namespace DH {
  interface IGraphQLResponseRoot {
    data?: IQuery;
    errors?: Array<IGraphQLResponseError>;
  }

  interface IGraphQLResponseError {
    message: string;            // Required for all errors
    locations?: Array<IGraphQLResponseErrorLocation>;
    [propName: string]: any;    // 7.2.2 says 'GraphQL servers may provide additional entries to error'
  }

  interface IGraphQLResponseErrorLocation {
    line: number;
    column: number;
  }

  /*
    description: 
  */
  interface IQuery {
    methodology: Array<IMethodology> | null;
    countries: Array<IEntity> | null;
    districtPageData: Array<IPage> | null;
    countryProfilePageData: Array<IPage> | null;
    odaDonorBubbleChartPageData: Array<IPage> | null;
    globalPicturePageData: Array<IPage> | null;
    povertyBubbleChartPageData: Array<IPage> | null;
    unbundlingOdaPageData: Array<IPage> | null;
    unbundlingOOfPageData: Array<IPage> | null;
    whereThePoorPageData: Array<IPage> | null;
    districts: Array<IDistrict> | null;
    globalPictureThemes: Array<ITheme> | null;
    spotlightThemes: Array<ITheme> | null;
    bubbleChartOda: Array<IBubbleChartOda> | null;
    bubbleChartPoverty: Array<IBubbleChartPoverty> | null;
    bubbleChartOptions: IBubbleChartOptions | null;
    overviewTab: IOverviewTab | null;
    povertyTab: IPovertyTab | null;
    populationTab: IPopulationTab | null;
    governmentFinance: IGovernmentFinance | null;
    internationalResources: IInternationalResources | null;
    flows: IFlows | null;
    singleResource: ISingleResourceData | null;
    mapData: IMapData | null;
    overviewTabRegional: IOverviewTabRegional | null;
    povertyTabRegional: IPovertyTabRegional | null;
    populationTabRegional: IPopulationTabRegional | null;
    educationTabRegional: IEducationTabRegional | null;
    healthTabRegional: IHealthTabRegional | null;
    localGovernmentFinance: ILocalGovernmentFinance | null;
    unbundlingAidDataTotal: IUnbundlingAidTotal | null;
    unbundlingAidData: Array<IAidUnit> | null;
    unbundlingSelectionData: IUnbundlingAidSelections | null;
  }

  /*
    description: 
  */
  interface IMethodology {
    name: string | null;
    description: string | null;
    methodology: string | null;
    uom: string | null;
    source: ISource | null;
  }

  /*
    description: 
  */
  interface ISource {
    name: string | null;
    link: string | null;
  }

  /*
    description: 
  */
  interface IEntity {
    id: string | null;
    name: string | null;
    slug: string | null;
    has_domestic_data: string | null;
    countryType: string | null;
  }

  /*
    description: 
  */
  interface IPage {
    id: string | null;
    title: string | null;
    narrative: string | null;
    donor_title: string | null;
  }

  /*
    description: 
  */
  interface IDistrict {
    id: string | null;
    name: string | null;
  }

  /*
    description: 
  */
  interface ITheme {
    id: string | null;
    name: string | null;
    default_indicator: string | null;
    indicators: Array<IThemeIndicator> | null;
  }

  /*
    description: 
  */
  interface IThemeIndicator {
    heading: string | null;
    source: string | null;
    tooltip: string | null;
    id: string | null;
    name: string | null;
  }

  /*
    description: 
  */
  interface IBubbleChartOda {
    year: number | null;
    id: string | null;
    name: string | null;
    income_group: string | null;
    region: string | null;
    uid: string | null;
    value: number | null;
    revenuePerPerson: number | null;
    numberInExtremePoverty: number | null;
  }

  /*
    description: 
  */
  interface IBubbleChartPoverty {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
    income_group: string | null;
    region: string | null;
    uid: string | null;
    revenuePerPerson: number | null;
    percentageInExtremePoverty: number | null;
  }

  /*
    description: 
  */
  interface IBubbleChartOptions {
    indicators: Array<IIdNamePair> | null;
    incomeGroups: Array<IIdNamePair> | null;
    regions: Array<IRegion> | null;
  }

  /*
    description: 
  */
  interface IIdNamePair {
    id: string | null;
    name: string | null;
  }

  /*
    description: 
  */
  interface IRegion {
    name: string | null;
    id: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IOverviewTab {
    poorestPeople: IIndicatorValueWithToolTip | null;
    population: IIndicatorValueWithToolTip | null;
    domesticResources: IIndicatorValueWithToolTip | null;
    internationalResources: IIndicatorValueWithToolTip | null;
    governmentSpendPerPerson: IIndicatorValueWithToolTip | null;
    averageIncomerPerPerson: IIndicatorDataWithToolTip | null;
    incomeDistTrend: IQuintileDataWithToolTip | null;
  }

  /*
    description: 
  */
  interface IIndicatorValueWithToolTip {
    value: string | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IToolTip {
    source: string | null;
    heading: string | null;
  }

  /*
    description: 
  */
  interface IIndicatorDataWithToolTip {
    data: Array<IIndicatorData> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IIndicatorData {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IQuintileDataWithToolTip {
    data: Array<IQuintile> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IQuintile {
    value: number | null;
    quintileName: string | null;
    uid: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IPovertyTab {
    poverty190Trend: IIndicatorDataWithToolTip | null;
    depthOfExtremePoverty: IIndicatorValueWithToolTip | null;
    incomeDistTrend: IQuintileDataWithToolTip | null;
  }

  /*
    description: 
  */
  interface IPopulationTab {
    population: IIndicatorValueWithToolTip | null;
    populationDistribution: IPopulationDistributionWithToolTip | null;
    populationPerAgeBand: IPopulationPerAgeBandWithToolTip | null;
  }

  /*
    description: 
  */
  interface IPopulationDistributionWithToolTip {
    data: Array<IPopulationDistribution> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IPopulationDistribution {
    group: string | null;
    value: number | null;
    year: number | null;
  }

  /*
    description: 
  */
  interface IPopulationPerAgeBandWithToolTip {
    data: Array<IPopulationPerAgeBand> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IPopulationPerAgeBand {
    band: string | null;
    value: number | null;
    year: number | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IGovernmentFinance {
    startYear: number | null;
    totalRevenue: IIndicatorValueWithToolTip | null;
    grantsAsPcOfRevenue: IIndicatorValueWithToolTip | null;
    spendingAllocation: ISpendingAllocationWithToolTip | null;
    currencyCode: string | null;
    currencyUSD: string | null;
    expenditure: Array<IDomestic> | null;
    revenueAndGrants: Array<IDomestic> | null;
    finance: Array<IDomestic> | null;
  }

  /*
    description: 
  */
  interface ISpendingAllocationWithToolTip {
    data: Array<ISpendingAllocation> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface ISpendingAllocation {
    value: number | null;
    name: string | null;
    color: string | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IDomestic {
    budget_type: string | null;
    levels: Array<string> | null;
    year: number | null;
    value: number | null;
    value_ncu: number | null;
    uid: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IInternationalResources {
    startYear: number | null;
    GNI: IIndicatorValueWithToolTip | null;
    netODAOfGNIIn: IIndicatorValueWithToolTip | null;
    netODAOfGNIOut: IIndicatorValueWithToolTip | null;
    resourceflowsOverTime: IFlowsOverTimeWithToolTip | null;
    resourcesOverTime: IResourceDataWithToolTip | null;
    mixOfResources: IResourceDataWithToolTip | null;
  }

  /*
    description: 
  */
  interface IFlowsOverTimeWithToolTip {
    data: Array<IIndicatorDataColored> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IIndicatorDataColored {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
    color: string | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IResourceDataWithToolTip {
    data: Array<IResourceData> | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IResourceData {
    year: number;
    value: number;
    flow_name: string;
    flow_id: string;
    position: number | null;
    short_name: string | null;
    flow_category: string | null;
    flow_type: string | null;
    direction: string | null;
    color: string | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IFlows {
    inflows: Array<IFlow> | null;
    outflows: Array<IFlow> | null;
  }

  /*
    description: 
  */
  interface IFlow {
    name: string | null;
    id: string | null;
    selections: Array<IFlowSelection> | null;
  }

  /*
    description: 
  */
  interface IFlowSelection {
    name: string | null;
    id: string | null;
    unbundle: boolean | null;
  }

  /*
    description: 
  */
  interface ISingleResourceData {
    resources: Array<IIndicatorData> | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IMapData {
    map: Array<IMapUnit> | null;
    name: string | null;
    uom_display: string | null;
    uom: string | null;
    map_style: string | null;
    source: string | null;
    start_year: number | null;
    end_year: number | null;
    default_year: number | null;
    description: string | null;
    theme: string | null;
    heading: string | null;
    country: string | null;
    id: string | null;
    legend: Array<ILegendField> | null;
  }

  /*
    description: 
  */
  interface IMapUnit {
    id: string | null;
    slug: string | null;
    name: string | null;
    year: number | null;
    color: string | null;
    value: number | null;
    detail: string | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface ILegendField {
    label: string | null;
    color: string | null;
    backgroundColor: string | null;
  }

  /*
    description: 
  */
  interface IOverviewTabRegional {
    poorestPeople: IIndicatorValueWithToolTip | null;
    regionalResources: IIndicatorValueWithToolTip | null;
    regionalResourcesBreakdown: Array<IIndicatorDataColoredWithToolTip> | null;
    localGovernmentSpendPerPerson: IIndicatorValueWithToolTip | null;
  }

  /*
    description: 
  */
  interface IIndicatorDataColoredWithToolTip {
    data: IIndicatorDataColored | null;
    toolTip: IToolTip | null;
  }

  /*
    description: 
  */
  interface IPovertyTabRegional {
    poorestPeople: IIndicatorValueWithToolTip | null;
    lifeExpectancy: IIndicatorValueWithToolTip | null;
    stdOfLiving: IIndicatorValueWithToolTip | null;
  }

  /*
    description: 
  */
  interface IPopulationTabRegional {
    totalPopulation: IIndicatorValueWithToolTip | null;
    populationDensity: IIndicatorValueWithToolTip | null;
    populationDistribution: IPopulationDistributionWithToolTip | null;
    averageDependencyRatio: IIndicatorValueWithToolTip | null;
    allAverageDependencyRatio: IIndicatorValueWithToolTip | null;
  }

  /*
    description: 
  */
  interface IEducationTabRegional {
    pupilTeacherRatioGovtSchl: IIndicatorValueWithToolTip | null;
    pupilTeacherRatioOtherSchl: IIndicatorValueWithToolTip | null;
    studentsPassRate: IIndicatorValueWithToolTip | null;
    studentsPassDistrictRank: IIndicatorValueWithToolTip | null;
    primaryEducationfunding: IIndicatorValueWithToolTip | null;
  }

  /*
    description: 
  */
  interface IHealthTabRegional {
    districtPerformance: IIndicatorValueWithToolTip | null;
    treatmeantOfTb: IIndicatorValueWithToolTip | null;
    districtHealthRank: IIndicatorValueWithToolTip | null;
    healthCareFunding: IIndicatorValueWithToolTip | null;
  }

  /*
    description: 
  */
  interface ILocalGovernmentFinance {
    startYear: number | null;
    currencyUSD: string | null;
    currencyCode: string | null;
    revenueAndGrants: Array<IDomestic> | null;
    expenditure: Array<IDomestic> | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidToTalQuery {
    aidType: string;
    year?: number | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidTotal {
    year: number | null;
    total: string | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidQuery {
    aidType: string;
    year: number;
    groupBy: string;
    to_di_id?: string | null;
    from_di_id?: string | null;
    sector?: string | null;
    bundle?: string | null;
    channel?: string | null;
  }

  /*
    description: 
  */
  interface IAidUnit {
    value: number | null;
    name: string | null;
    color: string | null;
    id: string | null;
    year: number | null;
    uid: string | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidSelections {
    to: Array<IIdNamePair> | null;
    from: Array<IIdNamePair> | null;
    channels: Array<IIdNamePair> | null;
    sectors: Array<IIdNamePair> | null;
    bundles: Array<IIdNamePair> | null;
    years: Array<number> | null;
  }

  /*
    description: 
  */
  interface IBubbleChartData {
    year: number | null;
    id: string | null;
    name: string | null;
    income_group: string | null;
    region: string | null;
    value: number | null;
    uid: string | null;
  }
}

// tslint:enable
\\""
`;

exports[`gql Types to Typescript types should return merged typedefs 1`] = `
"\\"schema {
  query: Query
}

type Query {
  methodology(moduleName: String!): [Methodology]
  countries: [Entity]
  districtPageData: [Page]
  countryProfilePageData: [Page]
  odaDonorBubbleChartPageData: [Page]
  globalPicturePageData: [Page]
  povertyBubbleChartPageData: [Page]
  unbundlingOdaPageData: [Page]
  unbundlingOOfPageData: [Page]
  whereThePoorPageData: [Page]
  districts(country: String!): [District]
  globalPictureThemes: [Theme]
  spotlightThemes(country: String!): [Theme]
  bubbleChartOda(id: String): [BubbleChartOda]
  bubbleChartPoverty(id: String): [BubbleChartPoverty]
  bubbleChartOptions: BubbleChartOptions
  overviewTab(id: String!): OverviewTab
  povertyTab(id: String!): PovertyTab
  populationTab(id: String!): PopulationTab
  governmentFinance(id: String!): GovernmentFinance
  internationalResources(id: String!): InternationalResources
  # eg recipient or donor
  flows(countryType: String!): Flows
  # for area tree map chart dropdown selectoion
  singleResource(resourceId: String!, countryId: String!, groupById: String!): SingleResourceData
  mapData(id: String!): MapData
  # id is district slug
  overviewTabRegional(id: String!, country: String!): OverviewTabRegional
  povertyTabRegional(id: String!, country: String!): PovertyTabRegional
  populationTabRegional(id: String!, country: String!): PopulationTabRegional
  educationTabRegional(id: String!, country: String!): EducationTabRegional
  healthTabRegional(id: String!, country: String!): HealthTabRegional
  localGovernmentFinance(id: String!, country: String!): LocalGovernmentFinance
  unbundlingAidDataTotal(args: UnbundlingAidToTalQuery): UnbundlingAidTotal
  unbundlingAidData(args: UnbundlingAidQuery): [AidUnit]
  unbundlingSelectionData(aidType: String): UnbundlingAidSelections
}

type Source {
  name: String
  link: String
}

type Methodology {
  name: String
  description: String
  methodology: String
  # think units
  uom: String
  source: Source
}

type Entity {
  id: String
  name: String
  slug: String
  has_domestic_data: String
  countryType: String
}

type Page {
  id: String
  title: String
  narrative: String
  donor_title: String
}

type District {
  id: String
  name: String
}

type ThemeIndicator {
  heading: String
  source: String
  tooltip: String
  id: String
  name: String
}

type Theme {
  id: String
  name: String
  default_indicator: String
  indicators: [ThemeIndicator]
}

type BubbleChartData {
  year: Int
  id: String
  name: String
  income_group: String
  region: String
  value: Float
  uid: String
}

type BubbleChartOda {
  year: Int
  # country id
  id: String
  # country name
  name: String
  income_group: String
  region: String
  uid: String
  value: Float
  revenuePerPerson: Float
  numberInExtremePoverty: Float
}

type BubbleChartPoverty {
  year: Int
  value: Float
  id: String
  name: String
  income_group: String
  region: String
  uid: String
  revenuePerPerson: Float
  percentageInExtremePoverty: Float
}

type Region {
  name: String
  id: String
  color: String
}

type BubbleChartOptions {
  # this list feeds off oda table from countries and global/concept file
   # IdNamePair is defined in unbundling aid types 
  indicators: [IdNamePair]
  incomeGroups: [IdNamePair]
  regions: [Region]
}

type IndicatorData {
  year: Int
  value: Float
  id: String
  name: String
  uid: String
}

type ToolTip {
  source: String
  heading: String
}

type IndicatorDataWithToolTip {
  data: [IndicatorData]
  toolTip: ToolTip
}

type IndicatorValueWithToolTip {
  value: String
  toolTip: ToolTip
}

type SpendingAllocation {
  value: Float
  name: String
  color: String
  uid: String
}

type Quintile {
  value: Float
  quintileName: String
  uid: String
  color: String
}

type QuintileDataWithToolTip {
  data: [Quintile]
  toolTip: ToolTip
}

type ResourceData {
  year: Int!
  value: Float!
  flow_name: String!
  flow_id: String!
  # a position value for a flow generated from flow_type, flow_category and flow name order
  position: Int
  short_name: String
  # Category i.e FDI, ODA
  flow_category: String
  # flow either inflow or outflow
  flow_type: String
  # i.e contains flow type as 1st level, flow category as second and flow name as 3rd
   # levels: [String]
   # in or out
  direction: String
  color: String
  uid: String
}

type OverviewTab {
  # how many of the poorest people globally live in a country
  poorestPeople: IndicatorValueWithToolTip
  # total population for a given country
  population: IndicatorValueWithToolTip
  domesticResources: IndicatorValueWithToolTip
  internationalResources: IndicatorValueWithToolTip
  # recipient countries $PPP, both donor and recipient
  governmentSpendPerPerson: IndicatorValueWithToolTip
  # donor: gross nation income per capit GNI
  averageIncomerPerPerson: IndicatorDataWithToolTip
  # donor: Income share by quintile
  incomeDistTrend: QuintileDataWithToolTip
}

type PovertyTab {
  # Poverty reduction over time area chart trend
  poverty190Trend: IndicatorDataWithToolTip
  # how deep is poverty %
  depthOfExtremePoverty: IndicatorValueWithToolTip
  # Recipients: how income is distributed, % of income received by each quintil
  incomeDistTrend: QuintileDataWithToolTip
}

type PopulationDistribution {
  group: String
  value: Int
  year: Int
}

type PopulationPerAgeBand {
  band: String
  value: Int
  year: Int
  uid: String
}

type PopulationDistributionWithToolTip {
  data: [PopulationDistribution]
  toolTip: ToolTip
}

type PopulationPerAgeBandWithToolTip {
  data: [PopulationPerAgeBand]
  toolTip: ToolTip
}

type PopulationTab {
  # total population in a country
  population: IndicatorValueWithToolTip
  # Urban vs Rural population level
  populationDistribution: PopulationDistributionWithToolTip
  # Number of people in 3 age bands (65+, 15- 65, 0 - 14)
  populationPerAgeBand: PopulationPerAgeBandWithToolTip
}

type Domestic {
  # eg Actual or budget
  budget_type: String
  levels: [String]
  year: Int
  value: Float
  value_ncu: Float
  uid: String
  color: String
}

type SpendingAllocationWithToolTip {
  data: [SpendingAllocation]
  toolTip: ToolTip
}

type GovernmentFinance {
  startYear: Int
  # Total revenue for a particular
  totalRevenue: IndicatorValueWithToolTip
  grantsAsPcOfRevenue: IndicatorValueWithToolTip
  # for donut chart 
  spendingAllocation: SpendingAllocationWithToolTip
  # for treemap
   # such as constant 2015 USD for tree map
  currencyCode: String
  currencyUSD: String
  # use resourcesRecipient sql
  expenditure: [Domestic]
  revenueAndGrants: [Domestic]
  finance: [Domestic]
}

type ResourceDataWithToolTip {
  data: [ResourceData]
  toolTip: ToolTip
}

type FlowSelection {
  name: String
  # this is the group ID
  id: String
  unbundle: Boolean
}

type Flow {
  name: String
  id: String
  selections: [FlowSelection]
}

type FlowsOverTimeWithToolTip {
  data: [IndicatorDataColored]
  toolTip: ToolTip
}

type InternationalResources {
  startYear: Int
  # Gross National Income
  GNI: IndicatorValueWithToolTip
  # Net ODA received, % of GNI for recipient countries
  netODAOfGNIIn: IndicatorValueWithToolTip
  # Net ODA out, % of GNI for recipient countries
  netODAOfGNIOut: IndicatorValueWithToolTip
  # for line chart in the  international resources tabs section,
   # IndicatorDataColoredWithToolTip  is defined in spotlight types
  resourceflowsOverTime: FlowsOverTimeWithToolTip
  # for sidebar chart in international resources section & area partition tree chart default data
  resourcesOverTime: ResourceDataWithToolTip
  # Whats the mix of resources can be for donors (out flows) or receipient (in flows)
   # this is for the donut chart
  mixOfResources: ResourceDataWithToolTip
}

type Flows {
  # an array of inflows for a particular countryType for area & partition chart
  inflows: [Flow]
  # an array of outflows for a particular countryType
  outflows: [Flow]
}

type SingleResourceData {
  resources: [IndicatorData]
  color: String
}

type MapUnit {
  # country code Id in DW this is di_id
  id: String
  # country slug
  slug: String
  # countryName derived from entity.csv
  name: String
  year: Int
  color: String
  value: Float
  detail: String
  uid: String
}

type LegendField {
  label: String
  color: String
  backgroundColor: String
}

type MapData {
  map: [MapUnit]
  # map indicator user friendly label / slug eg Poverty
  name: String
  # map value unit eg US $ or %
  uom_display: String
  uom: String
  map_style: String
  source: String
  start_year: Int
  end_year: Int
  default_year: Int
  description: String
  source: String
  theme: String
  heading: String
  country: String
  id: String
  legend: [LegendField]
}

type IndicatorDataColored {
  year: Int
  value: Float
  id: String
  name: String
  color: String
  uid: String
}

type IndicatorDataColoredWithToolTip {
  data: IndicatorDataColored
  toolTip: ToolTip
}

type OverviewTabRegional {
  # WHAT PERCENTAGE OF PEOPLE IN WAKISO LIVE BELOW THE NATIONAL POVERTY LINE? 
   # can be no data or '12%'
  poorestPeople: IndicatorValueWithToolTip
  # WHAT RESOURCES ARE AVAILABLE TO LOCAL GOVERNMENTS IN WAKISO? eg 3.6m or 2.7bn
   # this is a total of local, donor and central government resources
  regionalResources: IndicatorValueWithToolTip
  # IndicatorDataColored is defined in country profile types
   # has local government, donor and central government
  regionalResourcesBreakdown: [IndicatorDataColoredWithToolTip]
  # HOW MUCH DOES THE LOCAL GOVERNMENT SPEND PER PERSON?
  localGovernmentSpendPerPerson: IndicatorValueWithToolTip
}

type PovertyTabRegional {
  poorestPeople: IndicatorValueWithToolTip
  # WHAT IS THE AVERAGE LIFE EXPECTANCY? 
  lifeExpectancy: IndicatorValueWithToolTip
  # WHAT IS THE STANDARD OF LIVING SCORE? 
  stdOfLiving: IndicatorValueWithToolTip
}

type PopulationTabRegional {
  # The total population of a given district and the population density in per sq km
  totalPopulation: IndicatorValueWithToolTip
  populationDensity: IndicatorValueWithToolTip
  # Urban vs Rural population level
  populationDistribution: PopulationDistributionWithToolTip
  averageDependencyRatio: IndicatorValueWithToolTip
  allAverageDependencyRatio: IndicatorValueWithToolTip
}

type EducationTabRegional {
  # WHAT IS THE PUPIL–TEACHER RATIO IN PRIMARY EDUCATION?...in government schools  and...in all schools 
  pupilTeacherRatioGovtSchl: IndicatorValueWithToolTip
  pupilTeacherRatioOtherSchl: IndicatorValueWithToolTip
  # WHAT PERCENTAGE OF STUDENTS PASS THE PRIMARY LEAVING EXAM? 
  studentsPassRate: IndicatorValueWithToolTip
  studentsPassDistrictRank: IndicatorValueWithToolTip
  # HOW MUCH PRIMARY EDUCATION FUNDING IS THERE? 
  primaryEducationfunding: IndicatorValueWithToolTip
}

type HealthTabRegional {
  # WHAT IS THE DISTRICT LEAGUE HEALTH PERFORMANCE SCORE?
  districtPerformance: IndicatorValueWithToolTip
  # WHAT PERCENTAGE OF TUBERCULOSIS CASES HAVE BEEN SUCCESSFULLY TREATED? 
  treatmeantOfTb: IndicatorValueWithToolTip
  districtHealthRank: IndicatorValueWithToolTip
  # HOW MUCH LOCAL GOVERNMENT HEALTHCARE FUNDING IS THERE? 
  healthCareFunding: IndicatorValueWithToolTip
}

type LocalGovernmentFinance {
  startYear: Int
  currencyUSD: String
  currencyCode: String
  # come from finance file
  revenueAndGrants: [Domestic]
  expenditure: [Domestic]
}

type AidUnit {
  # this will usually be a summed up aggregate value
  value: Float
  # country or organisation or channel or bundle name
  name: String
  color: String
  id: String
  year: Int
  uid: String
}

type IdNamePair {
  id: String
  name: String
}

type UnbundlingAidTotal {
  year: Int
  total: String
}

type UnbundlingAidSelections {
  # unbundling aid selection options
  to: [IdNamePair]
  from: [IdNamePair]
  channels: [IdNamePair]
  sectors: [IdNamePair]
  # same as form
  bundles: [IdNamePair]
  years: [Int]
}

input UnbundlingAidToTalQuery {
  # oda or oof 
  aidType: String!
  year: Int
}

input UnbundlingAidQuery {
  # oda or oof 
  aidType: String!
  year: Int!
  # eg channel, bundle
  groupBy: String!
  to_di_id: String
  from_di_id: String
  sector: String
  # form is same as buddle
  bundle: String
  channel: String
}
\\""
`;
