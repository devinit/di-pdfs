// This file is auto generated by the gqlToTs.ts module
// tslint:disable
// graphql typescript definitions

declare namespace DH {
  interface IGraphQLResponseRoot {
    data?: IQuery;
    errors?: Array<IGraphQLResponseError>;
  }

  interface IGraphQLResponseError {
    message: string;            // Required for all errors
    locations?: Array<IGraphQLResponseErrorLocation>;
    [propName: string]: any;    // 7.2.2 says 'GraphQL servers may provide additional entries to error'
  }

  interface IGraphQLResponseErrorLocation {
    line: number;
    column: number;
  }


  interface IQuery {
    dvptCooperation: Array<IBasicIndicator> | null;
    tchCooperationByRegion: Array<ITchCooperationByRegion> | null;
    topTchRecipients: Array<ITopTchRecipients> | null;
    overallMultilateralExpenditure: Array<IBasicIndicator> | null;
    odaLikeFlowsByRegion: Array<IRegionValue> | null;
    odaLikeFlowsBySector: Array<ISectorValue> | null;
    odaRecipients: Array<IRegionAndRecipient> | null;
    multilateralExpenditure: Array<IMultialatral> | null;
    dvptCooperationTrend: Array<ITrendIndicator> | null;
    govmtdepartment: Array<IBasicIndicator> | null;
    aricfExpByRegion: Array<IRegionYearValue> | null;
    aricfExpBySector: Array<ISectorValue> | null;
  }


  interface IBasicIndicator {
    id: string;
    year: number;
    color: string;
    value: number;
    uid: string;
  }


  interface ITchCooperationByRegion {
    region: string;
    color: string;
    year: number;
    value: number;
    uid: string;
  }


  interface ITopTchRecipients {
    recipient: string;
    value: number;
  }


  interface IRegionValue {
    region: string;
    color: string;
    value: number;
    uid: string;
  }


  interface ISectorValue {
    sector: string;
    color: string;
    value: number;
    uid: string;
    year: number;
  }


  interface IRegionAndRecipient {
    region: string;
    recipient: string;
    color: string;
    value: number;
    uid: string;
  }


  interface IMultialatral {
    multilateral: string;
    color: string;
    value: number;
    year: number;
    uid: string;
  }


  interface ITrendIndicator {
    year: number;
    color: string;
    value: number;
    uid: string;
  }


  interface IRegionYearValue {
    region: string;
    year: number;
    color: string;
    value: number;
    uid: string;
  }
}

// tslint:enable
